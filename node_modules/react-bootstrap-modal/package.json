{
  "_args": [
    [
      {
        "raw": "react-bootstrap-modal",
        "scope": null,
        "escapedName": "react-bootstrap-modal",
        "name": "react-bootstrap-modal",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/apple/Documents/UCSD_Bootcamp/Week22_June19_Jun24/mindful_khoin"
    ]
  ],
  "_from": "react-bootstrap-modal@latest",
  "_id": "react-bootstrap-modal@3.0.1",
  "_inCache": true,
  "_location": "/react-bootstrap-modal",
  "_nodeVersion": "6.3.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/react-bootstrap-modal-3.0.1.tgz_1476826351853_0.6919692875817418"
  },
  "_npmUser": {
    "name": "monastic.panic",
    "email": "monastic.panic@gmail.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {
    "classnames": "2.2.5",
    "react-prop-types": "0.4.0",
    "warning": "3.0.0"
  },
  "_requested": {
    "raw": "react-bootstrap-modal",
    "scope": null,
    "escapedName": "react-bootstrap-modal",
    "name": "react-bootstrap-modal",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-bootstrap-modal/-/react-bootstrap-modal-3.0.1.tgz",
  "_shasum": "ad50cf42cb32a0f502f3ac2060bf24d0b7b2d293",
  "_shrinkwrap": null,
  "_spec": "react-bootstrap-modal",
  "_where": "/Users/apple/Documents/UCSD_Bootcamp/Week22_June19_Jun24/mindful_khoin",
  "author": {
    "name": "Jason Quense",
    "email": "monastic.panic@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/jquense/react-bootstrap-modal/issues"
  },
  "dependencies": {
    "classnames": "^2.2.3",
    "dom-helpers": "^2.2.4",
    "react-overlays": "^0.6.10",
    "react-prop-types": "^0.4.0"
  },
  "description": "React Bootstrap Modal ===================================",
  "devDependencies": {
    "@monastic.panic/component-playground": "^2.0.0",
    "babel-cli": "^6.5.2",
    "babel-eslint": "^6.1.2",
    "babel-loader": "^6.2.4",
    "babel-preset-es2015": "^6.6.0",
    "babel-preset-jason": "^1.0.1",
    "chai": "^3.5.0",
    "chai-as-promised": "^5.3.0",
    "cpy-cli": "^1.0.0",
    "css-loader": "^0.23.1",
    "eslint": "^3.4.0",
    "eslint-config-jason": "^3.0.0",
    "eslint-plugin-import": "^1.14.0",
    "eslint-plugin-react": "^6.2.0",
    "extract-text-webpack-plugin": "^1.0.1",
    "imports-loader": "^0.6.3",
    "json-loader": "^0.5.1",
    "karma": "^0.13.14",
    "karma-jsdom-launcher": "^3.0.0",
    "karma-mocha": "~0.2.2",
    "karma-mocha-reporter": "^2.0.0",
    "karma-sinon-chai": "^1.1.0",
    "karma-sourcemap-loader": "^0.3.2",
    "karma-webpack": "^1.7.0",
    "less": "^2.5.3",
    "less-loader": "^2.0.0",
    "lolex": "^1.4.0",
    "mocha": "^2.4.5",
    "raw-loader": "^0.5.1",
    "react": "^15.3.1",
    "react-dom": "^15.3.1",
    "release-script": "^1.0.2",
    "rimraf": "^2.4.3",
    "simulant": "^0.2.0",
    "sinon": "^1.17.3",
    "sinon-chai": "^2.6.0",
    "style-loader": "^0.13.1",
    "teaspoon": "^6.3.0",
    "webpack": "^1.12.2",
    "webpack-dev-server": "^1.12.1"
  },
  "directories": {},
  "dist": {
    "shasum": "ad50cf42cb32a0f502f3ac2060bf24d0b7b2d293",
    "tarball": "https://registry.npmjs.org/react-bootstrap-modal/-/react-bootstrap-modal-3.0.1.tgz"
  },
  "gitHead": "13104ebbadea779cb282764d79335e2d0ce8d1da",
  "homepage": "https://github.com/jquense/react-bootstrap-modal#readme",
  "keywords": [
    "react-boostrap-modal",
    "react-component",
    "modal",
    "portal",
    "dialog",
    "bootstrap"
  ],
  "license": "MIT",
  "main": "lib/Modal.js",
  "maintainers": [
    {
      "name": "monastic.panic",
      "email": "monastic.panic@gmail.com"
    }
  ],
  "name": "react-bootstrap-modal",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": ">=0.14.0",
    "react-dom": ">=0.14.0"
  },
  "readme": "React Bootstrap Modal\n===================================\n\nPartly a port of [jschr's bootstrap modal](https://github.com/jschr/bootstrap-modal/). Reimplements the Twitter Bootstrap Modal component in a React friendly way. Based on the original work of the react-bootstrap team.\n\n__note__: React bootstrap modal is compatible with bootstrap __3.3.4+__ if you want to use it with an earlier version of bootstrap 3 you need to override the `.modal-backdrop` styles to be the most recent one.\n\n## Features\n\n- Scoped focus\n- Stackable! (use with constraint)\n- Animated feedback when trying to close a \"static\" Modal\n- Straightforward API, no ModalTrigger or Overlay mixins to deal with\n\n## Use\n\n```js\nvar Modal = require('react-bootstrap-modal')\n\nclass ModalExample extends React.Component {\n\n  render(){\n    let closeModal = () => this.setState({ open: false })\n\n    let saveAndClose = () => {\n      api.saveData()\n        .then(() => this.setState({ open: false }))\n    }\n\n    return (\n      <div>\n        <button type='button'>Launch modal</button>\n\n        <Modal\n          show={this.state.open}\n          onHide={closeModal}\n          aria-labelledby=\"ModalHeader\"\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id='ModalHeader'>A Title Goes here</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <p>Some Content here</p>\n          </Modal.Body>\n          <Modal.Footer>\n            // If you don't have anything fancy to do you can use\n            // the convenient `Dismiss` component, it will\n            // trigger `onHide` when clicked\n            <Modal.Dismiss className='btn btn-default'>Cancel</Modal.Dismiss>\n\n            // Or you can create your own dismiss buttons\n            <button className='btn btn-primary' onClick={saveAndClose}>\n              Save\n            </button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nReact.render(<ModalExample />, document.body);\n\n```\n\n### `Modal`\n\nThe main Modal Component.\n\n#### Props\n\n- `show`: `Boolean(default false)` make the Modal visible or hidden\n- `backdrop`: `Enum<'static', true, false>(default true)` - Should the modal render a backdrop overlay. `\"static\"` backdrops are not dismissible by clicking the backdrop.\n- `keyboard`: `Boolean(default true)` Modal is dismissible via the `esc` key\n\n- `transition` `Boolean(default true)` Fade the entry and exit of the modal. You can also provide a\nTransition component from the `react-overlays` library to customize the animation more minutely.\n- `attentionClass`: `String(default 'shake')` - an animation class added to the modal when a \"static\" backdrop is clicked, set to nothing if\nno animation is desired\n- `container`: `Node(default document.body)`, a DOM Node to append the modal too\n- `onEnter`: handler fires right before the Modal animates in\n- `onEntering`: handler fires as the Modal starts entering\n- `onEntered`: handler fires after the enter animation finishes\n- `onExit`: handler fires right before the Modal animates out\n- `onExiting`: handler fires as the Modal starts exiting\n- `onExited`: handler fires after the exit animation finishes\n\n### `Modal.Header`\n\nThe Header section of Modal. If not included be sure to add an `aria-labelledby` elsewhere to keep the Modal accessible.\n\n#### Props\n  - `closeButton`: `Boolean(default true)` - render a close button or not\n  - `onClose`: `Function()` - a Handle when the close button is clicked. if left `undefined` the Header will automatically wire itself into the parent Modal `onHide()`, so you only need to specify a handler if you want a different behavior\n\n### `Modal.Title`\n\n### `Modal.Body`\n\nThe main content of the Modal, a convenience Component for: `<div className='modal-body'>content</div>`\n\n### `Modal.Footer`\n\nThe bottom footer of the Modal, a convenience Component for: `<div className='modal-footer'>content</div>`\n\n### `Modal.Dismiss`\n\nA dismiss button for the Parent Modal. `Dismiss` button will trigger its parent Modal `onHide()` handler. You don't need to use a Dismiss button, they are just a Convenience Component.\n\n### `Modal.BaseModal`\n\nBaseModal represents just the modal markup without any of the logic to render it to the `document.body`. It is generally not recommended that you work with this component directly. You can use it if you really want to render a Modal inline.\n\n## Styles\n\nYou can use this module separate from Twitter Bootstrap by just including the `/lib/styles/rbm-complete.css` file, or if you are using bootstrap and don't want to re-include styles you can just use `/lib/styles/rbm-patch.css`.\n\nIf you don't like the bootstrap visual look and feel, you can adjust `variables.less` to suit your needs.\n",
  "readmeFilename": "README.md",
  "release-script": {
    "defaultDryRun": "false"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jquense/react-bootstrap-modal.git"
  },
  "scripts": {
    "build": "npm run clean && babel src --out-dir lib && npm run less & npm run copy",
    "build:docs": "webpack --config ./webpack/doc-config.es6.js",
    "clean": "rimraf lib/*",
    "copy": "cpy src/less/* lib/styles",
    "docs": "webpack-dev-server --config ./webpack/doc-config.es6.js",
    "less": "lessc -x src/less/rbm-complete.less lib/styles/rbm-complete.css & lessc -x src/less/rbm-patch.less lib/styles/rbm-patch.css",
    "release": "release",
    "tdd": "karma start",
    "test": "karma start --single-run"
  },
  "version": "3.0.1"
}
